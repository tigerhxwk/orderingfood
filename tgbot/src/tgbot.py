#!/usr/bin/python3.9.6
import telebot
from telebot import types
import logging
from datetime import datetime

api_file = open ("../http_api.key", "r")
api_token = api_file.read().replace('\n', '')

foodBot = telebot.TeleBot(api_token)

TIME_LIMIT_STRING = "–°–æ–≤–º–µ—Å—Ç–Ω—ã–µ –∑–∞–∫–∞–∑—ã –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –¥–æ 11:30 —É—Ç—Ä–∞."

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)

logger = logging.getLogger("actionlogger")
logger.setLevel(logging.DEBUG)
handler = logging.FileHandler(f"{__name__}.log", mode='w')
formatter = logging.Formatter("%(name)s %(asctime)s %(levelname)s %(message)s")
handler.setFormatter(formatter)
logger.addHandler(handler)

def business_lunch_handler (callback):
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –±–∏–∑–Ω–µ—Å-–ª–∞–Ω—á–∞–º –Ω–µ—Ç üòî")
    menu_printer(callback.message)

def cold_meal_handler (callback):
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –ø–µ—Ä–≤—ã–º –±–ª—é–¥–∞–º –Ω–µ—Ç üòî")
    menu_printer(callback.message)

def soups_handler (callback):
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Å—É–ø–∞–º –Ω–µ—Ç üòî")
    menu_printer(callback.message)

def second_meal_handler (callback):
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –≤—Ç–æ—Ä—ã–º –±–ª—é–¥–∞–º –Ω–µ—Ç üòî")
    menu_printer(callback.message)

def garnish_handler (callback):
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –≥–∞—Ä–Ω–∏—Ä–∞–º –Ω–µ—Ç üòî")
    menu_printer(callback.message)

def beverages_handler (callback):
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –Ω–∞–ø–∏—Ç–∫–∞–º –Ω–µ—Ç üòî")
    menu_printer(callback.message)

def asian_handler (callback):
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∞–∑–∏–∞—Ç—Å–∫–æ–π –∫—É—Ö–Ω–µ –Ω–µ—Ç üòî")
    menu_printer(callback.message)

def bakery_handler (callback):
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –≤—ã–ø–µ—á–∫–µ –Ω–µ—Ç üòî")
    menu_printer(callback.message)

def cake_handler (callback):
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Ç–æ—Ä—Ç–∞–º –Ω–µ—Ç üòî")
    menu_printer(callback.message)

def pizza_handler (callback):
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –ø–∏—Ü—Ü–µ –Ω–µ—Ç üòî")
    menu_printer(callback.message)

def breakfast_handler (callback):
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∑–∞–≤—Ç—Ä–∞–∫–∞–º –Ω–µ—Ç üòî")
    menu_printer(callback.message)

def bread_handler (callback):
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Ö–ª–µ–±—É –Ω–µ—Ç üòî")
    menu_printer(callback.message)

def pancakes_handler (callback):
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –±–ª–∏–Ω—á–∏–∫–∞–º –Ω–µ—Ç üòî")
    menu_printer(callback.message)

def nothing_handler (callback):
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    foodBot.send_message(callback.message.chat.id, "–ñ–¥–µ–º —Ç–µ–±—è —Å–Ω–æ–≤–∞!")
    menu_printer(callback.message)


callback_map = {
    'business_lunch':business_lunch_handler,
    'cold_meal':cold_meal_handler,
    'soups':soups_handler,
    'second_meal':second_meal_handler,
    'garnish':garnish_handler,
    'beverages':beverages_handler,
    'asian':asian_handler,
    'bakery':bakery_handler,
    'cake':cake_handler,
    'pizza':pizza_handler,
    'breakfast':breakfast_handler,
    'bread':bread_handler,
    'pancakes':pancakes_handler,
    'nothing':nothing_handler
}

@foodBot.message_handler (commands = ['start'])
def starter (message):
    logger.debug(f"user {message.chat.username} {message.chat.first_name} {message.chat.last_name} used starter")
    buttons = types.ReplyKeyboardMarkup ()
    menu_btn = types.KeyboardButton("–ú–µ–Ω—é üçî")
    cart_btn = types.KeyboardButton("–ö–æ—Ä–∑–∏–Ω–∞ üõí")
    end_btn = types.KeyboardButton("–Ø –ø–µ—Ä–µ–¥—É–º–∞–ª(–∞) ‚úã")
    buttons.row(menu_btn)
    buttons.row(cart_btn, end_btn)
    foodBot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç, {message.chat.username}! \n" + TIME_LIMIT_STRING, reply_markup=buttons)
    foodBot.register_next_step_handler(message, btn_click_handler)

def btn_click_handler(message):
    if '–º–µ–Ω—é' in message.text.lower ():
        logger.debug(f"user {message.chat.username} {message.chat.first_name} {message.chat.last_name} selected menu")
        menu_printer (message)
    elif '–∫–æ—Ä–∑–∏–Ω–∞' in message.text.lower ():
        logger.debug(f"user {message.chat.username} {message.chat.first_name} {message.chat.last_name} selected cart")
        foodBot.send_message(message.chat.id, "–ö–æ—Ä–∑–∏–Ω–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
    elif '–ø–µ—Ä–µ–¥—É–º–∞–ª' in message.text.lower():
    #     need to make cart and 'end' features
        logger.debug(f"user {message.chat.username} {message.chat.first_name} {message.chat.last_name} changed his mind")
        foodBot.send_message(message.chat.id, "–ü—Ä–∏—Ö–æ–¥–∏ –µ—â–µ!")
    else:
        foodBot.send_message(message.chat.id, "–Ø —Ç–∞–∫–æ–µ –Ω–µ –∑–Ω–∞—é, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ")
    # to do - make starter case here
    foodBot.register_next_step_handler(message, btn_click_handler)

def menu_printer(message):
    keyboard = [
        [
            types.InlineKeyboardButton("–ë–∏–∑–Ω–µ—Å-–ª–∞–Ω—á–∏", callback_data="business_lunch"),
            types.InlineKeyboardButton("–•–æ–ª–æ–¥–Ω—ã–µ –±–ª—é–¥–∞", callback_data="cold_meal"),
        ],
        [
            types.InlineKeyboardButton("–°—É–ø—ã", callback_data="soups"),
            types.InlineKeyboardButton("–í—Ç–æ—Ä—ã–µ –±–ª—é–¥–∞", callback_data="second_meal"),
        ],
        [
            types.InlineKeyboardButton("–ì–∞—Ä–Ω–∏—Ä—ã", callback_data="garnish"),
            types.InlineKeyboardButton("–ù–∞–ø–∏—Ç–∫–∏", callback_data="beverages"),
        ],
        [
            types.InlineKeyboardButton("–°—É—à–∏, —Ä–æ–ª–ª—ã, –≤–æ–∫, –ø–∞—Å—Ç–∞", callback_data="asian"),
            types.InlineKeyboardButton("–í—ã–ø–µ—á–∫–∞", callback_data="bakery"),
        ],
        [
            types.InlineKeyboardButton("–¢–æ—Ä—Ç", callback_data="cake"),
            types.InlineKeyboardButton("–ü–∏—Ü—Ü–∞", callback_data="pizza"),
            types.InlineKeyboardButton("–ó–∞–≤—Ç—Ä–∞–∫", callback_data="breakfast"),
        ],
        [
            types.InlineKeyboardButton("–•–ª–µ–±, —Å–æ—É—Å—ã, –¥–æ–±–∞–≤–∫–∏", callback_data="bread"),
            types.InlineKeyboardButton("–ë–ª–∏–Ω—ã, —Å—ã—Ä–Ω–∏–∫–∏, –≤–∞—Ä–µ–Ω–∏–∫–∏", callback_data="pancakes"),
        ],
        [types.InlineKeyboardButton("–ù–∏—á–µ–≥–æ", callback_data="nothing")]
    ]

    reply_btns = types.InlineKeyboardMarkup(keyboard)
    foodBot.send_message(message.chat.id, "–í—ã–±–∏—Ä–∞–π –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=reply_btns)


@foodBot.callback_query_handler(func=lambda callback:True)
def cbhandler (callback):
    logger.debug(f"user {callback.message.chat.username} {callback.message.chat.first_name}" +
                 f" {callback.message.chat.last_name} selected {callback.data}")
    callback_map[callback.data](callback)


foodBot.infinity_polling ()