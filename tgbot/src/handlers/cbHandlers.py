from aiogram import types, Dispatcher
from aiogram.dispatcher.filters import Text
from init_bot import foodBot, foodBotDispatcher, logger
from handlers.msghandlers import starter as starter

async def menu_printer(callback :types.CallbackQuery):
    logger.debug(f"user {callback.message.chat.username} {callback.message.chat.first_name}\
                {callback.message.chat.last_name} selected menu")
    keyboard = [
        [
            types.InlineKeyboardButton("–ë–∏–∑–Ω–µ—Å-–ª–∞–Ω—á–∏", callback_data="business_lunch"),
            types.InlineKeyboardButton("–•–æ–ª–æ–¥–Ω—ã–µ –±–ª—é–¥–∞", callback_data="cold_meal"),
        ],
        [
            types.InlineKeyboardButton("–°—É–ø—ã", callback_data="soups"),
            types.InlineKeyboardButton("–í—Ç–æ—Ä—ã–µ –±–ª—é–¥–∞", callback_data="second_meal"),
        ],
        [
            types.InlineKeyboardButton("–ì–∞—Ä–Ω–∏—Ä—ã", callback_data="garnish"),
            types.InlineKeyboardButton("–ù–∞–ø–∏—Ç–∫–∏", callback_data="beverages"),
        ],
        [
            types.InlineKeyboardButton("–°—É—à–∏, —Ä–æ–ª–ª—ã, –≤–æ–∫, –ø–∞—Å—Ç–∞", callback_data="asian"),
            types.InlineKeyboardButton("–í—ã–ø–µ—á–∫–∞", callback_data="bakery"),
        ],
        [
            types.InlineKeyboardButton("–¢–æ—Ä—Ç", callback_data="cake"),
            types.InlineKeyboardButton("–ü–∏—Ü—Ü–∞", callback_data="pizza"),
            types.InlineKeyboardButton("–ó–∞–≤—Ç—Ä–∞–∫", callback_data="breakfast"),
        ],
        [
            types.InlineKeyboardButton("–•–ª–µ–±, —Å–æ—É—Å—ã, –¥–æ–±–∞–≤–∫–∏", callback_data="bread"),
            types.InlineKeyboardButton("–ë–ª–∏–Ω—ã, —Å—ã—Ä–Ω–∏–∫–∏, –≤–∞—Ä–µ–Ω–∏–∫–∏", callback_data="pancakes"),
        ],
        [types.InlineKeyboardButton("–ù–∏—á–µ–≥–æ", callback_data="nothing")]
    ]

    reply_btns = types.InlineKeyboardMarkup(row_width=2)
    # goddam 'list in list' iterator
    for i in keyboard:
        for j in i:
            reply_btns.insert(j)
        reply_btns.row()
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id}")

    await foodBot.send_message(callback.message.chat.id, "–í—ã–±–∏—Ä–∞–π –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=reply_btns)

# @foodBotDispatcher.message_handler (startswith = ['–ü–µ—Ä–µ–¥—É–º–∞–ª(–∞)'])
async def discard (callback : types.CallbackQuery):
    #need to make cart and 'end' features
    logger.debug(f"user {callback.message.chat.username} {callback.message.chat.first_name}\
                {callback.message.chat.last_name} changed his mind")
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id}")

    await foodBot.send_message(callback.message.chat.id, "–ë—É–¥–µ–º –∂–¥–∞—Ç—å —Å–Ω–æ–≤–∞!")
    await starter(callback.message)

# @foodBotDispatcher.message_handler (startswith = ['–ö–æ—Ä–∑–∏–Ω–∞'])
async def show_cart (callback : types.CallbackQuery):
    logger.debug(f"user {callback.message.chat.username} {callback.message.chat.first_name}\
                {callback.message.chat.last_name} requested cart")
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id}")
    await foodBot.send_message(callback.message.chat.id, "–ö–æ—Ä–∑–∏–Ω–∞ –ø–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –ø—Ä–∏—á–∏–Ω–∞–º –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    await starter(callback.message)

async def business_lunch_handler (callback : types.CallbackQuery):
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id}")
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id - 1}")
    await foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –±–∏–∑–Ω–µ—Å-–ª–∞–Ω—á–∞–º –Ω–µ—Ç üòî")
    await menu_printer(callback)

async def cold_meal_handler (callback : types.CallbackQuery):
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id}")
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id - 1}")
    await foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –ø–µ—Ä–≤—ã–º –±–ª—é–¥–∞–º –Ω–µ—Ç üòî")
    await menu_printer(callback)

async def soups_handler (callback : types.CallbackQuery):
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id}")
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id - 1}")
    await foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Å—É–ø–∞–º –Ω–µ—Ç üòî")
    await menu_printer(callback)

async def second_meal_handler (callback : types.CallbackQuery):
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id}")
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id - 1}")
    await foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –≤—Ç–æ—Ä—ã–º –±–ª—é–¥–∞–º –Ω–µ—Ç üòî")
    await menu_printer(callback)

async def garnish_handler (callback : types.CallbackQuery):
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id}")
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id - 1}")
    await foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –≥–∞—Ä–Ω–∏—Ä–∞–º –Ω–µ—Ç üòî")
    await menu_printer(callback)

async def beverages_handler (callback : types.CallbackQuery):
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id}")
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id - 1}")
    await foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –Ω–∞–ø–∏—Ç–∫–∞–º –Ω–µ—Ç üòî")
    await menu_printer(callback)

async def asian_handler (callback : types.CallbackQuery):
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id}")
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id - 1}")
    await foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∞–∑–∏–∞—Ç—Å–∫–æ–π –∫—É—Ö–Ω–µ –Ω–µ—Ç üòî")
    await menu_printer(callback)

async def bakery_handler (callback : types.CallbackQuery):
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id}")
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id - 1}")
    await foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –≤—ã–ø–µ—á–∫–µ –Ω–µ—Ç üòî")
    await menu_printer(callback)

async def cake_handler (callback : types.CallbackQuery):
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id}")
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id - 1}")
    await foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Ç–æ—Ä—Ç–∞–º –Ω–µ—Ç üòî")
    await menu_printer(callback)

async def pizza_handler (callback : types.CallbackQuery):
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id}")
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id - 1}")
    await foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –ø–∏—Ü—Ü–µ –Ω–µ—Ç üòî")
    await menu_printer(callback)

async def breakfast_handler (callback : types.CallbackQuery):
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id}")
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id - 1}")
    await foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∑–∞–≤—Ç—Ä–∞–∫–∞–º –Ω–µ—Ç üòî")
    await menu_printer(callback)

async def bread_handler (callback : types.CallbackQuery):
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id}")
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id - 1}")
    await foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Ö–ª–µ–±—É –Ω–µ—Ç üòî")
    await menu_printer(callback)

async def pancakes_handler (callback : types.CallbackQuery):
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id}")
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id - 1}")
    await foodBot.send_message(callback.message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –±–ª–∏–Ω—á–∏–∫–∞–º –Ω–µ—Ç üòî")
    await menu_printer(callback)

async def nothing_handler (callback : types.CallbackQuery):
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id}")
    try:
        await foodBot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    except:
        logger.debug(f"Unable to delete message {callback.message.message_id} from chat {callback.message.chat.id - 1}")
    await foodBot.send_message(callback.message.chat.id, "–ñ–¥–µ–º —Ç–µ–±—è —Å–Ω–æ–≤–∞!")
    await menu_printer(callback)

callback_map = {
    'business_lunch':business_lunch_handler,
    'cold_meal':cold_meal_handler,
    'soups':soups_handler,
    'second_meal':second_meal_handler,
    'garnish':garnish_handler,
    'beverages':beverages_handler,
    'asian':asian_handler,
    'bakery':bakery_handler,
    'cake':cake_handler,
    'pizza':pizza_handler,
    'breakfast':breakfast_handler,
    'bread':bread_handler,
    'pancakes':pancakes_handler,
    'nothing':nothing_handler
}

def register_callbacks_handler (foodDispatcher : Dispatcher):
    foodDispatcher.register_callback_query_handler(menu_printer, Text(equals="menu"))
    foodDispatcher.register_callback_query_handler(discard, Text(equals="discard"))
    foodDispatcher.register_callback_query_handler(show_cart, Text(equals="show_cart"))
    for cBack in callback_map:
        logger.debug (f"registering text: {cBack} as {callback_map[cBack]}")
        foodDispatcher.register_callback_query_handler(callback_map[cBack], Text(equals=cBack))
